version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    # Optionally, add volumes to persist data:
    # volumes:
    #   - qdrant_data:/qdrant/storage

  extractor:
    build: ./extractor
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka

  semantic:
    build: ./semantic
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka

  chunker:
    build: ./chunker
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - CHUNK_SIZE=512
    depends_on:
      - kafka

  embedder:
    build: ./embedder
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
    depends_on:
      - kafka
      - qdrant

  api:
    build: ./api
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - qdrant

  kafkadrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka

# volumes:
#   qdrant_data: